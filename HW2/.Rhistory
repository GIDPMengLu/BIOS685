num.hour <- sum(as.numeric(as.character(Dat[, peak.type])))
}
}else if(as.numeric(Year) <= 7 & Month == 11){
if(peak.type == "offpeak"){
num.hour <- sum(as.numeric(as.character(Dat[, "offpeak"])))-1
}else{
num.hour <- sum(as.numeric(as.character(Dat[, peak.type])))
}
}else{
num.hour <- sum(as.numeric(as.character(Dat[, peak.type])))
}
}
}
return(list(peak.type = peak.type,
start.date = as.character(Dat$startdate[1]),
end.date = as.character(Dat$enddate[nrow(Dat)]),
num.hour = num.hour))
}
get.hours <- function(iso, peak.type, period){
# Calculate hours
# Args:
#     iso: a character, one of PJM, MISO, ERCOT, SPP, NYISO, WECC, CAISO
#     peak.type: a character, one of onpeak, offpeak, flat, 2*16H, 7*8
#     period: a character 4 types, daily, monthly, quarterly, annnually
# Returns:
#     a list, with iso, peak.type, start.date, end.date and num.hour
Quarter <- data.frame(Q = paste0("Q", 1:4),
start = c("1/1", "4/1", "7/1", "10/1"),
end = c("3/31", "6/30", "9/30", "12/31"))
Eastern <- c("PJM", "MISO", "ERCOT", "SPP", "NYISO")
Western <- c("WECC", "CAISO")
if(iso%in%Eastern){
if(iso == "MISO"){
Res <- Cal.MISO(peak.type = peak.type, iso = "PJM", period = period)
Res$iso <- iso
}else{
Res <- Cal.Hours(peak.type = peak.type, iso = "PJM", period = period)
Res$iso <- iso
}
}else{
Res <- Cal.Hours(peak.type = peak.type, iso = "CAISO", period = period)
Res$iso <- iso
}
Res <- Res[c("iso", "peak.type", "start.date", "end.date", "num.hour")]
return(Res)
}
get.hours("ERCOT", "2*16H", "ay19")
get.hours("ERCOT", "2*16H", "may19")
get.hours("ERCOT", "onpeak", "may19")
setwd("/Users/mlu/Courses/BIOS685/Homework/HW2")
Jobs <- readRDS(file = Indeed_Job.rds)
dir()
Jobs <- readRDS(file = Indeed_Jobs.rds)
Jobs <- readRDS(file = "Indeed_Jobs.rds")
class(Jobs)
head(Jobs)
city = str_split(Jobs$Job_Location, ",")
require(tidyverse)
city = str_split(Jobs$Job_Location, ",")
city
city = separate(Jobs$Job_Location, ",")
str(Jobs)
city = separate(as.character(Jobs$Job_Location), ",")
Jobs <- Jobs %>%
distinct() %>%
mutate(city = str_split(as.character(Job_Location), ",", simplify = TRUE)[, 1],
state = str_split(as.character(Job_Location), ",", simplify = TRUE)[, 2])
dim(Jobs)
head(Jobs)
Jobs <- readRDS(file = "Indeed_Jobs.rds")
Jobs <- Jobs %>%
distinct() %>%
mutate(city = str_split(as.character(Job_Location), ",", simplify = TRUE)[, 1],
state = str_split(as.character(Job_Location), ",", simplify = TRUE)[, 2],
Job_Description = gsub("[\r\n]", "", Job_Description))
head(Jobs)
Jobs %>%
group_by(city) %>%
n()
Jobs %>%
count(city)
Jobs %>%
count(city) %>%
ggplot(aes(x = city, y = n, fill = city)) %>%
geom_bar(stat = "identity")
Jobs %>%
count(city) %>%
ggplot(aes(x = city, y = n, fill = city)) +
geom_bar(stat = "identity")
Jobs %>%
count(city, sort = TRUE) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(x = city, y = n, fill = city)) +
geom_bar(stat = "identity") +
labs(x = "Top 10 Cities", y = "Count") +
coord_flip()
Jobs %>%
count(city, sort = TRUE)
Jobs %>%
count(city, sort = TRUE) %>%
top_n(10)
skill_set <- Jobs %>%
dplyr::mutate(R = grepl("\\bR\\b", Job_Description)) %>%
dplyr::mutate(Python = grepl("Python", Job_Description, ignore.case=TRUE)) %>%
dplyr::mutate(SQL = grepl("SQL", Job_Description, ignore.case=TRUE)) %>%
dplyr::mutate(SAS = grepl("SAS", Job_Description, ignore.case=TRUE)) %>%
dplyr::mutate(Hadoop = grepl("hadoop", Job_Description, ignore.case=TRUE)) %>%
dplyr::mutate(Perl = grepl("perl", Job_Description, ignore.case=TRUE)) %>%
dplyr::mutate(`C++` = grepl("C++", Job_Description, fixed=TRUE)) %>%
dplyr::mutate(Java = grepl("java\\b", Job_Description, ignore.case=TRUE)) %>%
dplyr::mutate(Scala = grepl("scala", Job_Description, ignore.case=TRUE)) %>%
dplyr::mutate(Tensorflow = grepl("tensorflow", Job_Description, ignore.case=TRUE)) %>%
dplyr::mutate(Javascript = grepl("javascript", Job_Description, ignore.case=TRUE)) %>%
dplyr::mutate(Spark = grepl("spark", Job_Description, ignore.case=TRUE)) %>%
dplyr::mutate(VC = grepl("Git.*|Version Control|Bitbucket", Job_Description, ignore.case=TRUE)) %>%
dplyr::mutate(Terminal = grepl("command line|bash|terminal|shell|command-line", Job_Description, ignore.case=TRUE)) %>%
dplyr::mutate(Excel = grepl("\\<Excel\\>", Job_Description)) %>%
dplyr::mutate(Tableau = grepl("Tableau", Job_Description, ignore.case = TRUE)) %>%
dplyr::mutate(Julia = grepl("Julia", Job_Description, ignore.case = TRUE))
skill_set
names(skill_set)
skill_count
skill_count
skill_set[, -c(1:8)] %>%
purrr::map_dbl(sum) %>%
dplyr::tibble(skill = as.factor(names(.)), count = .) %>%
dplyr::arrange(desc(count)) -> skill_count
skill_count
ZZ <- skill_set[, c(7, 9:25)] %>%
gather(Skills, Value, -city)
head(ZZ)
ZZ <- skill_set[, c(7, 9:25)] %>%
gather(Skills, Value, -city) %>%
group_by(city, Skills) %>%
count()
head(ZZ)
dim(ZZ)
ZZ <- skill_set[, c(7, 9:25)] %>%
gather(Skills, Value, -city) %>%
group_by(city, Skills) %>%
filter(Value == TRUE)
head(ZZ)
ZZ <- skill_set[, c(7, 9:25)] %>%
gather(Skills, Value, -city) %>%
group_by(city, Skills) %>%
filter(Value == TRUE) %>%
count()
head(ZZ)
ZZ[1:20, ]
ZZ <- skill_set[, c(7, 9:25)] %>%
gather(Skills, Value, -city) %>%
group_by(city, Skills) %>%
filter(Value == TRUE) %>%
count(city, Skills)
head(ZZ)
ZZ <- skill_set[, c(7, 9:25)] %>%
gather(Skills, Value, -city) %>%
group_by(city, Skills) %>%
filter(Value == TRUE) %>%
count() %>%
top_n(10)
ZZ
table(ZZ$city)
skill_set <- skill_set[, c(7, 9:25)] %>%
gather(Skills, Value, -city) %>%
group_by(city, Skills) %>%
filter(Value == TRUE) %>%
count()
names(skill_set)
City = "New York"
dataset <- subset(skill_set, city = City)
dataset
dataset <- subset(skill_set, city == City)
dataset
dateRangeInput<-reactive({
dataset <- subset(skill_set, city == input$City)
return(dataset)
})
require(shiny)
dateRangeInput<-reactive({
dataset <- subset(skill_set, city == input$City)
return(dataset)
})
dateRangeInput()
dateRangeInput
head(Jobs)
Reviewers <- Jobs %>%
select(Company_Name, Job_Rating, Job_Reviews)
head(Reviewers)
?arrange
Reviewers <- Jobs %>%
select(Company_Name, Job_Rating, Job_Reviews) %>%
complete.cases() %>%
arrange(Job_Rating, Job_Reviews)
Reviewers <- Jobs %>%
select(Company_Name, Job_Rating, Job_Reviews) %>%
filter(complete.cases()) %>%
arrange(Job_Rating, Job_Reviews)
Reviewers <- Jobs %>%
select(Company_Name, Job_Rating, Job_Reviews) %>%
filter(complete.cases(.)) %>%
arrange(Job_Rating, Job_Reviews)
head(Reviewers)
Reviewers <- Jobs %>%
select(Company_Name, Job_Rating, Job_Reviews) %>%
filter(complete.cases(.)) %>%
arrange(desc(Job_Rating), desc(Job_Reviews))
Reviewers
Reviewers <- Jobs %>%
select(Company_Name, Job_Rating, Job_Reviews) %>%
filter(complete.cases(.)) %>%
arrange(desc(Job_Reviews))
head(Reviewers)
str(Job_Rating)
str(Jobs)
Reviewers <- Jobs %>%
select(Company_Name, Job_Rating, Job_Reviews) %>%
filter(complete.cases(.)) %>%
mutate(Job_Rating = as.numeric(as.character(Job_Rating)),
Job_Reviews = as.numeric(as.character(Job_Reviews))) %>%
arrange(desc(Job_Reviews))
head(Reviewers)
Reviewers <- Jobs %>%
select(Company_Name, Job_Rating, Job_Reviews) %>%
filter(complete.cases(.)) %>%
mutate(Job_Rating = as.numeric(as.character(Job_Rating)),
Job_Reviews = as.numeric(as.character(Job_Reviews))) %>%
arrange(desc(Job_Reviews), desc(Job_Rating))
head(Reviewers)
max(Reviewers$Job_Rating)
Reviewers <- Jobs %>%
select(Company_Name, Job_Rating, Job_Reviews) %>%
filter(complete.cases(.)) %>%
mutate(Job_Rating = as.numeric(as.character(Job_Rating)),
Job_Reviews = as.numeric(as.character(Job_Reviews))) %>%
arrange(desc(Job_Reviews), desc(Job_Rating)) %>%
group_by(Job_Rating, Job_Reviews) %>%
top_n(10)
Reviewers
Jobs %>%
count(city, sort = TRUE) %>%
mutate(city = fct_reorder(city, n)) %>%
top_n(10) %>%
ungroup()
Reviewers <- Jobs %>%
select(Company_Name, Job_Rating, Job_Reviews) %>%
filter(complete.cases(.)) %>%
mutate(Job_Rating = as.numeric(as.character(Job_Rating)),
Job_Reviews = as.numeric(as.character(Job_Reviews))) %>%
arrange(desc(Job_Reviews), desc(Job_Rating)) %>%
group_by(Job_Rating, Job_Reviews) %>%
top_n(10)
Reviewers
Reviewers[Job_Reviews == max(Reviewers$Job_Reviews), ]
Company <- Reviewers %>%
filter(Job_Reviews == max(Job_Reviews),
Job_Rating == max(Job_Rating))
Compnay
Company
Reviewers %>%
filter(Job_Reviews == 191833,
Job_Rating == 5)
max(Reviewers$Job_Rating)
max(Reviewers$Job_Reviews)
Company <- Reviewers %>%
filter(Job_Reviews == 191833 | Job_Rating == 5)
Company
ggplot(Reviewers) +
geom_point(aes(x = Job_Rating, y = Job_Reviews)) +
geom_text(Company, aes(x = Job_Rating, y = Job_Reviews, label = Company_Name))
ggplot() +
geom_point(Reviewers, aes(x = Job_Rating, y = Job_Reviews)) +
geom_text(Company, aes(x = Job_Rating, y = Job_Reviews, label = Company_Name))
Company <- Reviewers %>%
filter(Job_Reviews == 191833 | Job_Rating == 5)
Company
ggplot(Reviewers, aes(x = Job_Rating, y = Job_Reviews)) +
geom_point() +
geom_text(Company, aes(x = Job_Rating, y = Job_Reviews, label = Company_Name))
Reviewers <- Jobs %>%
select(Company_Name, Job_Rating, Job_Reviews) %>%
filter(complete.cases(.)) %>%
mutate(Job_Rating = as.numeric(as.character(Job_Rating)),
Job_Reviews = as.numeric(as.character(Job_Reviews))) %>%
arrange(desc(Job_Reviews), desc(Job_Rating))
Company <- Reviewers %>%
filter(Job_Reviews == 191833 | Job_Rating == 5)
Reviewers
Company
ggplot(Reviewers, aes(x = Job_Rating, y = Job_Reviews)) +
geom_point() +
geom_text(Company, aes(x = Job_Rating, y = Job_Reviews, label = Company_Name))
ggplot(Reviewers, aes(x = Job_Rating, y = Job_Reviews)) +
geom_point() +
geom_text(Company, mapping = aes(x = Job_Rating, y = Job_Reviews, label = Company_Name))
ggplot(Reviewers, aes(x = Job_Rating, y = Job_Reviews)) +
geom_point() +
geom_text(Company, mapping = aes(x = Job_Rating, y = Job_Reviews, label = Company_Name), color = "red")
ggplot(Reviewers, aes(x = Job_Rating, y = Job_Reviews)) +
geom_point() +
geom_text_repel(Company, mapping = aes(x = Job_Rating, y = Job_Reviews, label = Company_Name), color = "red")
require(ggrepel)
ggplot(Reviewers, aes(x = Job_Rating, y = Job_Reviews)) +
geom_point() +
geom_text_repel(Company, mapping = aes(x = Job_Rating, y = Job_Reviews, label = Company_Name), color = "red")
Reviewers <- Jobs %>%
select(city, Company_Name, Job_Rating, Job_Reviews) %>%
filter(complete.cases(.)) %>%
mutate(Job_Rating = as.numeric(as.character(Job_Rating)),
Job_Reviews = as.numeric(as.character(Job_Reviews))) %>%
arrange(desc(Job_Reviews), desc(Job_Rating))
head(Reviewers)
Company <- Reviewers %>%
filter(Job_Reviews == max(Job_Reviews) | Job_Rating == max(Job_Rating))
Company
Reviews %>% filter(city = "Atlanta")
Reviews %>% filter(city == "Atlanta")
Reviewers %>% filter(city == "Atlanta")
str_locate(Jobs$Job_Description, "salary")
Jobs$Job_Description[4]
str_locate(Jobs$Job_Description, "\$")
str_locate(Jobs$Job_Description, "\\$")
Jobs$Job_Description[492]
str_locate(Jobs$Job_Description, "\\$")
Jobs$Job_Description[492]
str_locate(Jobs$Job_Description, "\\$")
Jobs$Job_Description[493]
Salary_Location <- str_locate(Jobs$Job_Description, "\\$")
Index <- is.na(Salary_Location[, 1])
Index
Index <- which(!is.na(Salary_Location[, 1]))
index
Index
Job_Salary <- Jobs[Index, ]
Job_Salary$Job_Description[1]
Job_Salary$Job_Description[2]
Job_Salary$Job_Description[3]
Job_Salary$Job_Description[4]
str_locate(Jobs$Job_Description, "\\$[*]\\/")
Salary_Location <- str_locate(Jobs$Job_Description, "\\$")
Index <- which(!is.na(Salary_Location[, 1]))
Job_Salary <- Jobs[Index, ]
str_locate(tolower(Jobs$Job_Description), "\\$ | salary")
str_locate(tolower(Jobs$Job_Description), "\\$ & salary")
Salary_Location <- str_locate(tolower(Jobs$Job_Description), "\\$ | salary")
Index <- which(!is.na(Salary_Location[, 1]))
Index
Job_Salary <- Jobs[Index, ]
Job_Salary$Job_Description[1]
Job_Salary$Job_Description[2]
Salary_Location
Job_Salary$Job_Description[3]
Dollor_Location <- str_locate(tolower(Jobs$Job_Description), "\\$")
Index <- which(!is.na(Dollor_Location[, 1]))
Job_Salary <- Jobs[Index, ]
Index
Salary_Location <- str_locate(tolower(Job_Salary$Job_Description), "salary")
Index <- which(!is.na(Salary_Location[, 1]))
Index
Dollor_Location <- str_locate(tolower(Jobs$Job_Description), "\\$")
Index <- which(!is.na(Dollor_Location[, 1]))
Job_Salary <- Jobs[Index, ]
Salary_Location <- str_locate(tolower(Job_Salary$Job_Description), "salary")
Index <- which(!is.na(Salary_Location[, 1]))
Job_Salary <- Job_Salary[Index, ]
Job_Salary$Job_Description[2]
Job_Salary$Job_Description[3]
Job_Salary$Job_Description[4]
Job_Salary$Job_Description[5]
Job_Salary$Job_Description[6]
Job_Salary$Job_Description[1]
Job_Salary$Job_Description[2]
Job_Salary$Job_Description[3]
Job_Salary$Job_Description[4]
Job_Salary$Job_Description[5]
Job_Salary$Job_Description[6]
Job_Salary$Job_Description[7]
Job_Salary$Job_Description[8]
Job_Salary$Job_Description[9]
Job_Salary$Job_Description[10]
Job_Salary$Job_Description[11]
Job_Salary$Job_Description[12]
Job_Salary$Job_Description[13]
Job_Salary$Job_Description[14]
Job_Salary$Job_Description[15]
Job_Salary$Job_Description[16]
Job_Salary$Job_Description[17]
Job_Salary$Job_Description[18]
Job_Salary$Job_Description[19]
Job_Salary$Job_Description[20]
Job_Salary$Job_Description[21]
Job_Salary$Job_Description[22]
Job_Salary$Job_Description[23]
Job_Salary$Job_Description[24]
Job_Salary$Job_Description[25]
Job_Salary$Job_Description[26]
Job_Salary$Job_Description[27]
Job_Salary$Job_Description[28]
Job_Salary$Job_Description[29]
Job_Salary$Job_Description[30]
Job_Salary$Job_Description[31]
Job_Salary$Job_Description[32]
Job_Salary$Job_Description[33]
Job_Salary$Job_Description[34]
Job_Salary$Job_Description[35]
Job_Salary$Job_Description[36]
Job_Salary$Job_Description[37]
Job_Salary$Job_Description[38]
Job_Salary$Job_Description[39]
Job_Salary$Job_Description[40]
Job_Salary$Job_Description[41]
dim(Job_Salary)
Job_Salary$Job_Description[42]
Job_Salary$Job_Description[43]
Job_Salary$Job_Description[44]
Job_Salary$Job_Description[45]
Job_Salary$Job_Description[46]
Job_Salary$Job_Description[47]
Job_Salary$Job_Description[48]
Lower_Salary <- c(110231, 60, 115000, 65000, 20000, 100000, 68, 60, 25, 35000, 100000, 12,
70000, 21.59, 60, 40, 100000, 100000, 74988, 1500000, 110231, 110231, 0, 0,
90000, 0, 0, 90000, 115000, 150000, 80, 800000, 0, 50, 88704, 93282, 93282,
90000, 56888, 60, 70000, 75000, 70000, 80000, 90000, 93282, 165372)
Upper_Salary <- c(143304, 75, 125000, 90000, 80000, 200000, 75, 75, 35, 75000, 116000, 15,
850000, 21.59, 75, 55, 225000, 200000, 145200, 250000, 143304, 143304, 0, 0,
120000, 0, 0, 125000, 135000, 200000, 90, 120000, 0, 60, 115313, 121264, 121264,
170000, 77937.6, 80, 70000, 80000, 100000, 140000, 160000, 121264, 239784)
Job_Salary$Lower_Salary <- Lower_Salary
Job_Salary$Upper_Salary <- Upper_Salary
Job_Salary <- Job_Salary %>%
distinct()
Dollor_Location <- str_locate(tolower(Jobs$Job_Description), "\\$")
Index <- which(!is.na(Dollor_Location[, 1]))
Job_Salary <- Jobs[Index, ]
Salary_Location <- str_locate(tolower(Job_Salary$Job_Description), "salary")
Index <- which(!is.na(Salary_Location[, 1]))
Job_Salary <- Job_Salary[Index, ]
Lower_Salary <- c(110231, 60, 115000, 65000, 20000, 100000, 68, 60, 25, 35000, 100000, 12,
70000, 21.59, 60, 40, 100000, 100000, 74988, 1500000, 110231, 110231, 0, 0,
90000, 0, 0, 90000, 115000, 150000, 80, 800000, 0, 50, 88704, 93282, 93282,
90000, 56888, 60, 70000, 75000, 70000, 80000, 90000, 93282, 165372)
Upper_Salary <- c(143304, 75, 125000, 90000, 80000, 200000, 75, 75, 35, 75000, 116000, 15,
850000, 21.59, 75, 55, 225000, 200000, 145200, 250000, 143304, 143304, 0, 0,
120000, 0, 0, 125000, 135000, 200000, 90, 120000, 0, 60, 115313, 121264, 121264,
170000, 77937.6, 80, 70000, 80000, 100000, 140000, 160000, 121264, 239784)
Job_Salary$Lower_Salary <- Lower_Salary
Job_Salary$Upper_Salary <- Upper_Salary
Job_Salary <- Job_Salary %>%
select(city, Lower_Salary, Upper_Salary)
distinct()
Job_Salary <- Job_Salary %>%
select(city, Lower_Salary, Upper_Salary) %>%
distinct()
Job_Salary
Dollor_Location <- str_locate(tolower(Jobs$Job_Description), "\\$")
Index <- which(!is.na(Dollor_Location[, 1]))
Job_Salary <- Jobs[Index, ]
Salary_Location <- str_locate(tolower(Job_Salary$Job_Description), "salary")
Index <- which(!is.na(Salary_Location[, 1]))
Job_Salary <- Job_Salary[Index, ]
Lower_Salary <- c(110231, 60, 115000, 65000, 20000, 100000, 68, 60, 25, 35000, 100000, 12,
70000, 21.59, 60, 40, 100000, 100000, 74988, 1500000, 110231, 110231, 0, 0,
90000, 0, 0, 90000, 115000, 150000, 80, 800000, 0, 50, 88704, 93282, 93282,
90000, 56888, 60, 70000, 75000, 70000, 80000, 90000, 93282, 165372)
Upper_Salary <- c(143304, 75, 125000, 90000, 80000, 200000, 75, 75, 35, 75000, 116000, 15,
850000, 21.59, 75, 55, 225000, 200000, 145200, 250000, 143304, 143304, 0, 0,
120000, 0, 0, 125000, 135000, 200000, 90, 120000, 0, 60, 115313, 121264, 121264,
170000, 77937.6, 80, 70000, 80000, 100000, 140000, 160000, 121264, 239784)
Job_Salary$Lower_Salary <- Lower_Salary
Job_Salary$Upper_Salary <- Upper_Salary
Job_Salary <- Job_Salary %>%
select(city, Lower_Salary, Upper_Salary) %>%
distinct() %>%
filter(Lower_Salary != 0) %>%
mutate(Type = ifelse(Lower_Salary < 100, "Hourly", "Yearly")) %>%
group_by(city) %>%
summarise_all(sum())
Job_Salary <- Job_Salary %>%
select(city, Lower_Salary, Upper_Salary) %>%
distinct() %>%
filter(Lower_Salary != 0) %>%
mutate(Type = ifelse(Lower_Salary < 100, "Hourly", "Yearly")) %>%
group_by(city) %>%
summarise_all(mean)
Job_Salary
Dollor_Location <- str_locate(tolower(Jobs$Job_Description), "\\$")
Index <- which(!is.na(Dollor_Location[, 1]))
Job_Salary <- Jobs[Index, ]
Salary_Location <- str_locate(tolower(Job_Salary$Job_Description), "salary")
Index <- which(!is.na(Salary_Location[, 1]))
Job_Salary <- Job_Salary[Index, ]
Lower_Salary <- c(110231, 60, 115000, 65000, 20000, 100000, 68, 60, 25, 35000, 100000, 12,
70000, 21.59, 60, 40, 100000, 100000, 74988, 1500000, 110231, 110231, 0, 0,
90000, 0, 0, 90000, 115000, 150000, 80, 800000, 0, 50, 88704, 93282, 93282,
90000, 56888, 60, 70000, 75000, 70000, 80000, 90000, 93282, 165372)
Upper_Salary <- c(143304, 75, 125000, 90000, 80000, 200000, 75, 75, 35, 75000, 116000, 15,
850000, 21.59, 75, 55, 225000, 200000, 145200, 250000, 143304, 143304, 0, 0,
120000, 0, 0, 125000, 135000, 200000, 90, 120000, 0, 60, 115313, 121264, 121264,
170000, 77937.6, 80, 70000, 80000, 100000, 140000, 160000, 121264, 239784)
Job_Salary$Lower_Salary <- Lower_Salary
Job_Salary$Upper_Salary <- Upper_Salary
Job_Salary <- Job_Salary %>%
select(city, Lower_Salary, Upper_Salary) %>%
distinct() %>%
filter(Lower_Salary != 0) %>%
mutate(Type = ifelse(Lower_Salary < 100, "Hourly", "Yearly")) %>%
group_by(city, Type) %>%
summarise_all(mean)
Job_Salary
as.data.frame(Job_Salary)
q()
